pipeline {
  agent any
  environment {
    ARDUINO_DIRECTORIES_USER = "${env.WORKSPACE}/WaziDev"
  }
  stages {
    stage('Prepare') {
      steps {
        sh 'pip3 install unittest-xml-reporting'
      }
    }
    stage('Flash WaziDev') {
      steps {
        echo "WaziDev port is $WAZIDEV_PORT"
        sh "echo $PATH"
        sh "sudo -E echo $PATH"
        dir('WaziDev'){
          git url: 'https://github.com/Waziup/WaziDev.git'
          dir("tests/LoRaWAN-test/") {
            sh 'arduino-cli core install arduino:avr'
            sh 'arduino-cli lib install simpleRPC'
            sh 'arduino-cli compile --fqbn arduino:avr:pro:cpu=8MHzatmega328 --libraries ../../libraries'
            sh 'sudo arduino-cli upload -p $WAZIDEV_PORT --fqbn arduino:avr:pro:cpu=8MHzatmega328'
          }
        }
      }
    }
    stage('Test') {
      steps {
        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
          dir('IntegrationTests'){
            sh 'sudo -E python3 integration-tests.py'
          }
        }
      }
    }
  }
  post {
    always {
      junit 'IntegrationTests/results.xml'
    }
  }
}
